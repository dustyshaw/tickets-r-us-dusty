# Dusty's docker-compose file
version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      DustySecret: ${DUSTY_SECRET}
      DustysEmail: ${DUSTYS_EMAIL}
    volumes:
      - ../TestsRUS/20240212.07.58.45.sql:/docker-entrypoint-initdb.d/initDb.sql
    networks:
      otel:

  blazorapp:
    depends_on:
      - db        # database must build first before blazor app
    build: ..     # builds in the directory ABOVE because that's where the Dockerfile is at
    environment:
      - TicketsDB=user id=postgres; password=postgres; server=db; database=postgres;
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "7070:8080"   # website will be found at localhost:7070 
    networks:
      otel:
    healthcheck:
      test: wget --tries=1 http://localhost:8080/healthcheck || exit 1
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s  
    restart: unless-stopped

  blackbox:
    image: prom/blackbox-exporter:v0.23.0
    container_name: blackbox2
    restart: unless-stopped
    ports:
      - 9101:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./blackbox/blackbox.yml:/etc/blackbox/blackbox.yml  # change this to use ${PWD} ?
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      otel: # not sure what this does?

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus2
    hostname: prometheus
    restart: unless-stopped
    ports:
      - 9083:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # change this to use ${PWD}
      - prometheus:/prometheus
    depends_on:
      - blackbox
    networks:
      otel: # not sure what this does...

  loki:
    # https://github.com/grafana/loki/releases
    image: grafana/loki:2.8.0
    container_name: loki2
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - /etc/localtime:/etc/localtime:ro      
      - ./loki/loki.yml:/etc/loki/local-config.yaml
      - loki:/data/loki
    restart: unless-stopped
    ports:
      - 2100:3100
    networks:
      otel:

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana2
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    ports:
      - 3009:3000
    depends_on:
      - prometheus
      - loki
    networks:
      otel: # not sure what this does....

  otel-collector:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/releases
    container_name: otel2
    hostname: otel
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel/otel.yml:/etc/otel-collector-config.yaml
    restart: unless-stopped
    ports:
      - 8887:8888   # Prometheus metrics exposed by the collector
      - 8880:8889   # Prometheus exporter metrics
      - 4310:4317   # OTLP gRPC receiver
      - 9205:55679  # zpages
      - 13130:13133 # Health check Need to change?
      - 1234:1234
    networks:
      otel:
  
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9405:9411
    networks:
      otel:
  
  proxy:
    image: nginx
    container_name: dusty_proxy
    ports:
      - 7634:80
    networks:
      otel:
    volumes:
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf

networks:
  databaseTunnel:
    driver: bridge
  otel:

volumes:
  loki:
  prometheus:
  grafana-data:
